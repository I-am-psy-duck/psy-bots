-- BOT NAME, LIKE, INSTAGRAM_BOT, FACEBOOK_BOT
CREATE TABLE IF NOT EXISTS TB_BOT(
    BOT_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    DESCRIPTION VARCHAR(50) NOT NULL
);

-- URL
CREATE TABLE IF NOT EXISTS TB_URL(
    URL_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    URL VARCHAR(200) NOT NULL
);

-- ACTIONS, LIKE, LOGIN, REGISTER
CREATE TABLE IF NOT EXISTS TB_ACTION(
    ACTION_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    DESCRIPTION VARCHAR(60) NOT NULL
);

-- A LOGIN ACTION CAN HAVE MULTIPLES URLS
CREATE TABLE IF NOT EXISTS TB_ACTION_URL (
    ACTION_URL_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    ACTION_ID INTEGER NOT NULL,
    URL_ID INTEGER NOT NULL,
    FOREIGN KEY(ACTION_ID) REFERENCES TB_ACTION(ACTION_ID),
    FOREIGN KEY (URL_ID) REFERENCES TB_URL(URL_ID)
);

-- CONTENT TO FIND THE ELEMENT BY XPATH
CREATE TABLE IF NOT EXISTS TB_XPATH (
    XPATH_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    XPATH VARCHAR(120) NOT NULL
);

-- ACTIONS OF THE BOT
CREATE TABLE IF NOT EXISTS TB_BOT_ACTION_URL (
    BOT_ACTION_URL_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    BOT_ID INTEGER NOT NULL,
    ACTION_URL_ID INTEGER NOT NULL,
    FOREIGN KEY(BOT_ID) REFERENCES TB_BOT(BOT_ID),
    FOREIGN KEY(ACTION_URL_ID) REFERENCES TB_ACTION_URL(ACTION_URL_ID)
);

-- ACTIONS OF THE BOT WITH XPATH CONTENT
CREATE TABLE IF NOT EXISTS TB_BOT_ACTION_URL_XPATH(
    BOT_ACTION_URL_ID INTEGER NOT NULL,
    XPATH_ID INTEGER NOT NULL,
    POSITION INTEGER NOT NULL , -- THE ORDER OF THE XPATH AT SAME PAGE
    DESCRIPTION VARCHAR(100),
    FOREIGN KEY(BOT_ACTION_URL_ID) REFERENCES TB_BOT_ACTION_URL(BOT_ACTION_URL_ID),
    FOREIGN KEY(XPATH_ID) REFERENCES TB_XPATH(XPATH_ID)
);

-- TB USER 
CREATE TABLE TB_USER (
    USER_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    URL VARCHAR(180) NOT NULL,
    UNIQUE(USER_ID, URL)
);

-- USER AND USER THAT HIM FOLLOW
CREATE TABLE TB_USER_FOLLOWING(
    USER_ID INTEGER NOT NULL,
    USER_FOLLOWING_ID INTEGER NOT NULL,
    FOREIGN KEY(USER_ID) REFERENCES TB_USER(USER_ID),
    FOREIGN KEY(USER_FOLLOWING_ID) REFERENCES TB_USER(USER_ID),
    UNIQUE(USER_ID, USER_FOLLOWING_ID)
);

-- USERS THAT FOLLOW USER
CREATE TABLE TB_USER_FOLLOWERS(
    USER_ID INTEGER NOT NULL,
    USER_FOLLOWER_ID INTEGER NOT NULL,
    FOREIGN KEY(USER_ID) REFERENCES TB_USER(USER_ID),
    FOREIGN KEY(USER_FOLLOWER_ID) REFERENCES TB_USER(USER_ID),
    UNIQUE(USER_ID, USER_FOLLOWER_ID)
);

-- PRIVATE POSTS DOES NOT NEED TO FOLLOW TO SEE PHOTOS
CREATE TABLE TB_USER_POST(
    USER_ID INTEGER NOT NULL,
    SOURCE VARCHAR(255) NOT NULL,
    FOREIGN KEY(USER_ID) REFERENCES TB_USER(USER_ID),
    UNIQUE(USER_ID,SOURCE)
);